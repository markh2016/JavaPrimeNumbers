package primenumbers;

import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mark harrington 23:30 Monday  2020 Jan 06 
 */
public class PrimeF extends javax.swing.JFrame {

    /**
     * Creates new form PrimeF
     */
    
     
    public int inputnum  = 0  ;  // global to class 
    
    public int num_one , num_two  ; 
    
    private final int intarray[]  ;
    private String strArray [] ; 
    private int primeArray[] ;
    boolean enterflag = false ; 
             
    
    
    public PrimeF() {
        initComponents();
        intarray= new int[2] ; // decalre you array size in the constructor
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        Answers = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        CalcButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Find two prime numbers  MD Harrington");

        txtInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInputKeyPressed(evt);
            }
        });

        Answers.setColumns(20);
        Answers.setRows(5);
        jScrollPane1.setViewportView(Answers);

        jLabel2.setText("Answers ");

        jLabel1.setText(" Enter Prime number ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(83, 83, 83)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                    .addComponent(txtInput))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        CalcButton.setText("Start  Calculation");
        CalcButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(CalcButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CalcButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CalcButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcButtonActionPerformed
        // TODO add your handling code here:
         int myanswer  ;
         
         int count2= 0 ;
        
         if (enterflag == false)
         {
              JOptionPane.showMessageDialog(null, "Uh-oh! \n You didnt press enter \n after inputting your prime number", "Error", JOptionPane.ERROR_MESSAGE);
         }
         
         
         if(enterflag == true)
         {
         
         for (int b = 0 ; b < primeArray.length; b++)
         {
              myanswer = inputnum - primeArray[b] ; // subtract each array entry from the number you entered
              
            if (count2 < 2)
            {
               if((isPrime(myanswer)==false)&&(myanswer !=0 ))
               {
                   
                   
                   // we have a prime number as the answer 
                   System.out.println("Input was " + inputnum + " Minus " + primeArray[b]+ " = " + myanswer + "\n" );
                   
                   System.out.println(myanswer + " is a prime number  " +"\n") ;
                   // store this in a list 
                   if(count2==0){
                       
                   num_one = myanswer ; 
                   }
                   
                   if (count2==1) {
                       
                     num_two= myanswer ;
                    Answers.append ("Answers are " +num_one + " and " + num_two +"\n" ) ; 
                   }
                  
                   count2+=1 ;
                   
               }// end if  
               
              
             
         } // end if count< 2
        
        
    }//GEN-LAST:event_CalcButtonActionPerformed

  } // en if flag == true 
         // reset flag 
         enterflag = false  ;
        
 }// end method
         
         
         
    private void txtInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInputKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
            
        {            
            
            if(!(txtInput.getText().trim().equals(""))){
            inputnum = Integer.parseInt(txtInput.getText().trim()) ;
            Answers.append( "Number entered was " + inputnum +"\n");
            
             if(isPrime(inputnum)==true)
             {
                   JOptionPane.showMessageDialog(null, "Uh-oh! not a prime number \n Please redo", "Error", JOptionPane.ERROR_MESSAGE);
                   txtInput.setText("") ;
                   Answers.setText("");
                   
             }
             else {
                 Answers.append("Listing all prime numbers up to " + inputnum +"\n") ;
                 listAllPrimes(inputnum) ;
                 enterflag=true ; 
             }
        } else 
                
            {
                JOptionPane.showMessageDialog(null, "Uh-oh! You didnt input any data", "Error", JOptionPane.ERROR_MESSAGE);
            }
            
    } // end method 
        
       
         
    }//GEN-LAST:event_txtInputKeyPressed

    private void  listAllPrimes(int  pNum) 
    {
        
        String  primeNumbers = "";
        int number = pNum ;
        int counter = 0 ; 
        
         for (int i = 2; i <= number; i++)         
        { 		  	  
          
            if (!(isPrime(i)))
            {
              counter +=1 ;  
              primeNumbers = primeNumbers + i + " ";
            }
            
        }
      
  
        Answers.append("Number of prime numbers found is " + counter + "\n") ;
         // now split the  primenumbers string 
        strArray = primeNumbers.split(" ") ; 
        // put this into an integer array   
        // declare array size 
        
          
       primeArray = new int[counter] ;  // size is now declared 
        
        // itertae through the  array and assign each word of the string to PrimeArray 
        
         for( int x = 0 ; x < strArray.length ; x++)
         {
             
             primeArray[x] = Integer.parseInt(strArray[x]) ;
             Answers.append(x + " : " + primeArray[x]+ "\n")   ;  
         }
        
        
        
        
    
    }
    
    
   
    private  boolean isPrime(int num)
    {
         boolean is_prime = false  ; 
         
        
        for(int i = 2; i <= num/2; ++i)
        {
            // condition for nonprime number
            if(num % i == 0)
            {
                
                is_prime = true;
                break;
            }
        }
        if (!is_prime){
           
            return is_prime  ; 
        } else
            
    
         return is_prime  ; 
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Answers;
    private javax.swing.JButton CalcButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtInput;
    // End of variables declaration//GEN-END:variables
}
